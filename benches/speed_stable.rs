use std::{collections::HashMap, str::FromStr};

use anyhow::Result;
use criterion::{black_box, criterion_group, criterion_main, Criterion};
use malachite_base::num::basic::traits::{One, Zero};
use malachite_nz::natural::Natural;
use nekoton::transport::models::ExistingContract;
use nekoton_abi::{FunctionExt, PackAbiPlain, UnpackAbi, UnpackAbiPlain};
use nekoton_utils::TrustMe;
use ton_block::MsgAddressInt;
use tonswap_pair::{
    normal_pair::{Direction, Pair},
    stable_pair::{AmplificationCoefficient, FeeParams, StablePair, TokenDataInput},
    utils::{mul_divc, mul_divc_dec, mul_divc_mal, mul_divc_native},
};

fn criterion_benchmark(c: &mut Criterion) {
    let token_data = vec![
        TokenDataInput {
            decimals: 9,
            balance: 5530869000000000,
        },
        TokenDataInput {
            decimals: 18,
            balance: 5514989303312229845534954,
        },
    ];

    let token_index = HashMap::from([([0; 32], 0), ([1; 32], 1)]);
    let pair = StablePair::new(
        token_data,
        token_index,
        AmplificationCoefficient {
            value: Natural::from(85u32),
            precision: Natural::ONE,
        },
        FeeParams {
            denominator: Natural::from(1000000u32),
            pool_numerator: Natural::from(3000u64),
            beneficiary_numerator: Natural::ZERO,
        },
    )
    .unwrap();

    let contract: ExistingContract = serde_json::from_str(STATE).unwrap();
    let contract_pair = DexPair { inner: contract };
    let address = MsgAddressInt::from_str(
        "0:58031386969e5694e6db4373c5901e2a832fec253a6d7295a074dd810d272910",
    )
    .unwrap();

    c.bench_function("native stable", |b| {
        b.iter(|| {
            pair.expected_exchange(black_box(123123123123123), &[0; 32])
                .unwrap()
        })
    })
    .bench_function("contract", |b| {
        b.iter(|| {
            contract_pair
                .expected_exchange(black_box(123123123123123), address.clone())
                .unwrap()
        })
    });
}

pub struct DexPair {
    pub inner: ExistingContract,
}

const STATE: &'static str = r#"{"account":"","lastTransactionId":{"hash":"9e44bd0f705c0f90644da65f2e41d1576e9c0c7874ae0a0d38c270756850084c","isExact":true,"lt":"27331751000001"},"timings":{"genLt":"0","genUtime":0},"type":"exists"}"#;

impl DexPair {
    pub fn expected_exchange(
        &self,
        amount: u128,
        spent_token_root: MsgAddressInt,
    ) -> Result<ExpectedExchangeOutput> {
        #[derive(PackAbiPlain, Debug)]
        struct ExpectedExchangeInput {
            #[abi(name = "answerId")]
            _answer_id: u32,
            #[abi]
            amount: u128,
            #[abi]
            spent_token_root: MsgAddressInt,
        }

        let contract = include_str!("dexPairv3.json");
        let contract = ton_abi::Contract::load(contract)?;
        let fun = contract.function("expectedExchange").trust_me();
        let tokens = ExpectedExchangeInput {
            _answer_id: 0,
            amount,
            spent_token_root,
        }
        .pack();
        let tokens = fun.run_local(
            &nekoton_utils::SimpleClock,
            self.inner.account.clone(),
            &tokens,
        )?;
        let tokens = tokens.tokens.unwrap();

        Ok(tokens.unpack()?)
    }
}

#[derive(UnpackAbiPlain, Debug)]
pub struct ExpectedExchangeOutput {
    #[abi]
    pub expected_amount: u128,
    #[abi]
    pub expected_fee: u128,
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);
