use std::str::FromStr;

use anyhow::Result;
use criterion::{black_box, criterion_group, criterion_main, Criterion};
use nekoton::transport::models::ExistingContract;
use nekoton_abi::{FunctionExt, PackAbiPlain, UnpackAbi, UnpackAbiPlain};
use nekoton_utils::TrustMe;
use ton_block::MsgAddressInt;

use tonswap_pair::normal_pair::{Direction, Pair};
use tonswap_pair::utils::{mul_divc, mul_divc_dec, mul_divc_mal, mul_divc_native};

fn criterion_benchmark(c: &mut Criterion) {
    let left = 266342825246179940;
    let right = 58776831;
    let pair = Pair::new(left, right);

    let contract_data = r#" {
        "type": "exists",
        "account": "",
        "timings": {
            "genLt": "0",
            "genUtime": 0
        },
        "lastTransactionId": {
            "isExact": true,
            "lt": "21134197000006",
            "hash": "c75f95c56ba3041f7b105b717cb1bf873f3b7e9787088981047a3e1d0eed1f8b"
        }
    }"#;
    let contract: ExistingContract = serde_json::from_str(contract_data).unwrap();
    let contract_pair = DexPair { inner: contract };
    let address = MsgAddressInt::from_str(
        "0:0ee39330eddb680ce731cd6a443c71d9069db06d149a9bec9569d1eb8d04eb37",
    )
    .unwrap();
    c.bench_function("native", |b| {
        b.iter(|| {
            pair.expected_exchange(Direction::LeftToRight, black_box(123123123123123))
                .unwrap()
        })
    })
    .bench_function("contract", |b| {
        b.iter(|| contract_pair.expected_exchange(1234, address.clone()))
    })
    .bench_function("muldiv_native", |b| {
        b.iter(|| {
            mul_divc_native(
                black_box(4611686018427387904),
                black_box(4611686018427387904),
                black_box(1234),
            )
        })
    })
    .bench_function("muldiv", |b| {
        b.iter(|| {
            mul_divc(
                black_box(4611686018427387904),
                black_box(4611686018427387904),
                black_box(1234),
            )
        })
    })
    .bench_function("muldiv_mal", |b| {
        b.iter(|| {
            mul_divc_mal(
                black_box(4611686018427387904),
                black_box(4611686018427387904),
                black_box(1234),
            )
        })
    })
    .bench_function("muldiv_dec", |b| {
        b.iter(|| {
            mul_divc_dec(
                black_box(4611686018427387904),
                black_box(4611686018427387904),
                black_box(1234),
            )
        })
    });
}

pub struct DexPair {
    pub inner: ExistingContract,
}

impl DexPair {
    pub fn expected_exchange(
        &self,
        amount: u128,
        spent_token_root: MsgAddressInt,
    ) -> Result<ExpectedExchangeOutput> {
        #[derive(PackAbiPlain, Debug)]
        struct ExpectedExchangeInput {
            #[abi(name = "answerId")]
            _answer_id: u32,
            #[abi]
            amount: u128,
            #[abi]
            spent_token_root: MsgAddressInt,
        }

        let contract = include_str!("dexPairv3.json");
        let contract = ton_abi::Contract::load(contract)?;
        let fun = contract.function("expectedExchange").trust_me();
        let tokens = ExpectedExchangeInput {
            _answer_id: 0,
            amount,
            spent_token_root,
        }
        .pack();
        let tokens = fun.run_local(
            &nekoton_utils::SimpleClock,
            self.inner.account.clone(),
            &tokens,
        )?;
        let tokens = tokens.tokens.unwrap();

        Ok(tokens.unpack()?)
    }
}

#[derive(UnpackAbiPlain, Debug)]
pub struct ExpectedExchangeOutput {
    #[abi]
    pub expected_amount: u128,
    #[abi]
    pub expected_fee: u128,
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);
